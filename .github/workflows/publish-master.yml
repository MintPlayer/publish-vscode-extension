name: Build, Lint, Test and Deploy

on:
  push:
    branches:
      - master

jobs:
  build-lint-test:
    name: Node ${{ matrix.node }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    strategy:
      fail-fast: true
      matrix:
        os:
          - ubuntu-latest
        node:
          - 16
    steps:
      - name: Checkout Source
        uses: actions/checkout@v2
      - name: Get tags
        run: git fetch --tags origin
      - name: Install Node ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
      - name: Install Dependencies
        run: npm ci
      - name: Run Linter
        run: npm run lint
      - name: Build Code
        run: npm run build
      - name: Run Unit Tests
        run: npm run test
      - name: "Check if the index.js was built before check-in"
        # Ensure no changes, but ignore node_modules dir since dev/fresh ci deps installed.
        run: |
          git diff --exit-code --stat -- . ':!node_modules' \
          || (echo "##[error] found changed files after build. please 'npm run build'" \
                    "and check in all changes" \
              && exit 1)
        
      - name: Get NPM version
        id: read-package-json-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1

      - name: get email
        id: getemail
        uses: evvanErb/get-github-email-by-username-action@v1.25
        with:
          github-username: ${{ github.actor }}
          #token: ${{ github.token }}

      - name: Check if a tag exists which corresponds to the current package.json version
        id: find-package-json-corresponding-tag
        uses: jimschubert/query-tag-action@v1
        with:
          include: v${{ steps.read-package-json-version.outputs.current-version }}

      - name: check-create-tag
        if: steps.find-package-json-corresponding-tag.outputs.tag != steps.read-package-json-version.outputs.current-version
        run: |
          echo 'Tag ${{ steps.read-package-json-version.outputs.current-version }}' doesnt exist yet

      # - name: Update Major Tag
      #   run: |
      #     MAJOR_VERSION=$(git tag | grep -oP "\Kv[0-9]+" | tail -1)
      #     git config user.name ${{ github.actor }}
      #     git config user.email ${{ steps.getemail.outputs.email }}
      #     git tag -afm "Updated tag $MAJOR_VERSION to $(git tag | grep -oP "\Kv[0-9]+" | tail -1)" $MAJOR_VERSION
      #     git push --tags --force

# Create a tag manually using the command line
# Publish to Github Marketplace should be done from the homepage